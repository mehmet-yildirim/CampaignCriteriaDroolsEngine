package com.payflex.campaignCriteria.drlGenerator;

import java.util.List;
import java.util.HashMap;

import tr.com.innova.payflex.campaignCriteria.drlGenerator.helpers.*;
import tr.com.innova.payflex.campaignCriteria.drlGenerator.entity.*;

//CampaignName : Scenario5

rule "Campaign(5)-Rule1-Sec1(Init)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.NewEventReceived)
	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.DroolsCampaignEventValidated);
		update($event);
end

rule "Campaign(5)-Rule1-Sec2(EndUser)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.DroolsCampaignEventValidated)
		eval
		(
			 $event.getEndUserField("Gender") == "F"
		)
	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.EndUserCriteriasAreSatisfied);
		update($event);
end

rule "Campaign(5)-Rule1-Sec3(CurrentEvent)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.EndUserCriteriasAreSatisfied)
		eval
		(
			 DroolsDateHelper.firstIsAfterSecond($event.getCurrentEventField("Date"),"2016-06-01 00:00:00") && 
			 DroolsDateHelper.firstIsBeforeSecond($event.getCurrentEventField("Date"),"2017-06-01 00:00:00") && 
			 $event.getCurrentEventField("Amount") != null && (double)$event.getCurrentEventField("Amount") >= 80
		)
	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.CurrentEventCriteriasAreSatisfied);
		update($event);
end

rule "Campaign(5)-Rule1-Sec4(PastEvents)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.CurrentEventCriteriasAreSatisfied)

		$pastEvents0 : List(size>= 1 && size<=999999)
				from collect(HashMap(
					get("Type") == "Purchase",
					get("Amount") >= 15,
					DroolsDateHelper.firstIsInTheLastPeriod(get("Date"),"2-M", $event.getValue("Timestamp"))
				)
				from $event.getPastEvents)


		$pastEvents1 : List(size>= 3 && size<=999999)
				from collect(HashMap(
					get("Type") == "Purchase",
					get("Amount") >= 25,
					DroolsDateHelper.firstIsAfterSecond(get("Date"),"2016-11-01 00:00:00"),
					DroolsDateHelper.firstIsBeforeSecond(get("Date"),"2017-01-01 00:00:00")
				)
				from $event.getPastEvents)

	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.PastEventsCriteriasAreSatisfied);
		update($event);
end

rule "Campaign(5)-Rule1-Sec5(PastBenefits)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.PastEventsCriteriasAreSatisfied)
	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.PastBenefitsCriteriasAreSatisfied);
		update($event);
end

rule "Campaign(5)-Rule1-Sec6(BenefitLimit)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.PastBenefitsCriteriasAreSatisfied)

		$benetifLimit : List(size<2)
				from collect(HashMap(
					get("CampaignId")=="5"
				)
				from $event.getPastBenefits())
	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.BenefitLimitCriteriasAreSatisfied);
		update($event);
end

rule "Campaign(5)-Rule1-Sec7(Recurrence)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.BenefitLimitCriteriasAreSatisfied)
	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.RecurrenceCriteriasAreSatisfied);
		update($event);
end

rule "Campaign(5)-Rule1-Sec8(Final)"
	when
		$event : DroolsCampaignEvent(getDroolsCampaignAuditByRuleNo(1) == DroolsCampaignAudit.RecurrenceCriteriasAreSatisfied)
	then
		$event.updateDroolsCampaignAuditByRuleNo(1, DroolsCampaignAudit.AllRuleCriteriasAreSatisfied);
		update($event);
		$event.addDroolsCampaignMatch("5","1","1");
end